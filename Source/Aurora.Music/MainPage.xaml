<!--
Copyright (c) Aurora Studio. All rights reserved.

Licensed under the MIT License. See LICENSE in the project root for license information.
-->
<Page
    x:Class="Aurora.Music.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Aurora.Music" xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:vm="using:Aurora.Music.ViewModels" xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:controls="using:Aurora.Music.Controls" xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors"
    Unloaded="Page_Unloaded"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <controls:BindedTemplates/>
                <ResourceDictionary Source="/Themes/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary Source="/Themes/Light.xaml" x:Key="Light"/>
                <ResourceDictionary Source="/Themes/Dark.xaml" x:Key="Dark"/>
            </ResourceDictionary.ThemeDictionaries>
            <Style x:Key="MainPageSplitViewStyle" TargetType="SplitView">
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="OpenPaneLength" Value="{ThemeResource SplitViewOpenPaneThemeLength}"/>
                <Setter Property="PaneBackground" Value="{ThemeResource SystemControlAltTranslucentAcrylicElementBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="SplitView">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition1" Width="{Binding TemplateSettings.OpenPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    <ColumnDefinition x:Name="ColumnDefinition2" Width="*"/>
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="DisplayModeStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition From="Closed" To="OpenOverlayLeft">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="TranslateX">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.NegativeOpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.35" Value="0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.35" Value="0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0"/>
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.35" Value="1.0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition From="Closed" To="OpenOverlayRight">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="TranslateX">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.35" Value="0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.NegativeOpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.35" Value="0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0"/>
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.35" Value="1.0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition From="ClosedCompactLeft" To="OpenCompactOverlayLeft">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.NegativeOpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.35" Value="0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0"/>
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.35" Value="1.0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition From="ClosedCompactRight" To="OpenCompactOverlayRight">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.OpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.35" Value="0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0"/>
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.35" Value="1.0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition From="OpenOverlayLeft" To="Closed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="TranslateX">
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.12" Value="{Binding TemplateSettings.NegativeOpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.12" Value="{Binding TemplateSettings.OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0"/>
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.12" Value="0.0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition From="OpenOverlayRight" To="Closed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="TranslateX">
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.12" Value="{Binding TemplateSettings.OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.12" Value="{Binding TemplateSettings.NegativeOpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0"/>
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.12" Value="0.0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition From="OpenCompactOverlayLeft" To="ClosedCompactLeft">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.12" Value="{Binding TemplateSettings.NegativeOpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0"/>
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.12" Value="0.0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition From="OpenCompactOverlayRight" To="ClosedCompactRight">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.12" Value="{Binding TemplateSettings.OpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0"/>
                                                        <SplineDoubleKeyFrame KeySpline="0.23,1 0.32,1" KeyTime="0:0:0.12" Value="0.0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Closed"/>
                                        <VisualState x:Name="ClosedCompactLeft">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX" To="{Binding TemplateSettings.NegativeOpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="ClosedCompactRight">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="2"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX" To="{Binding TemplateSettings.OpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="OpenOverlayLeft">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="OpenOverlayRight">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="OpenInlineLeft">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="OpenInlineRight">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.OpenPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.Column)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="OpenCompactOverlayLeft">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="OpenCompactOverlayRight">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="OverlayVisibilityStates">
                                        <VisualState x:Name="OverlayNotVisible"/>
                                        <VisualState x:Name="OverlayVisible">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{ThemeResource SplitViewLightDismissOverlayBackground}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="PaneRoot" Background="{TemplateBinding PaneBackground}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Visibility="Collapsed" Width="{Binding TemplateSettings.OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" Canvas.ZIndex="1">
                                    <Grid.Clip>
                                        <RectangleGeometry x:Name="PaneClipRectangle">
                                            <RectangleGeometry.Transform>
                                                <CompositeTransform x:Name="PaneClipRectangleTransform"/>
                                            </RectangleGeometry.Transform>
                                        </RectangleGeometry>
                                    </Grid.Clip>
                                    <Grid.RenderTransform>
                                        <CompositeTransform x:Name="PaneTransform"/>
                                    </Grid.RenderTransform>
                                    <Border Child="{TemplateBinding Pane}"/>
                                    <Rectangle x:Name="HCPaneBorder" Fill="{ThemeResource SystemControlForegroundTransparentBrush}" HorizontalAlignment="Right" Visibility="Collapsed" Width="1" x:DeferLoadStrategy="Lazy"/>
                                </Grid>
                                <Grid x:Name="ContentRoot" Grid.ColumnSpan="2">
                                    <Border Child="{TemplateBinding Content}"/>
                                    <Rectangle x:Name="LightDismissLayer" Visibility="Collapsed" Fill="#66000000"/>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Button" x:Key="MainPageHamStyle">
                <Setter Property="Background" Value="{ThemeResource ButtonRevealBackground}" />
                <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
                <Setter Property="BorderBrush" Value="{ThemeResource ButtonRevealBorderBrush}" />
                <Setter Property="BorderThickness" Value="{ThemeResource ButtonRevealBorderThemeThickness}" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="FocusVisualMargin" Value="-3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundPointerOver}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPointerOver}" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundPressed}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPressed}" />
                                            </VisualState.Setters>

                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundDisabled}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushDisabled}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundDisabled}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="ContentPresenter"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Content="{TemplateBinding Content}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ListViewItem" x:Key="PaneListItemStyle">
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}" />
                <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}" />
                <Setter Property="TabNavigation" Value="Local" />
                <Setter Property="IsHoldingEnabled" Value="True" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
                <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
                <Setter Property="AllowDrop" Value="False" />
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="FocusVisualMargin" Value="0" />
                <Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource ListViewItemFocusVisualPrimaryBrush}" />
                <Setter Property="FocusVisualPrimaryThickness" Value="2" />
                <Setter Property="FocusVisualSecondaryBrush" Value="{ThemeResource ListViewItemFocusVisualSecondaryBrush}" />
                <Setter Property="FocusVisualSecondaryThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <ListViewItemPresenter ContentTransitions="{TemplateBinding ContentTransitions}"
                        x:Name="Root" HorizontalAlignment="Stretch"
                        Control.IsTemplateFocusTarget="True"
                        FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                        FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                        FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                        FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                        FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                        SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}"
                        CheckBrush="Transparent"
                        CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
                        DragBackground="{ThemeResource ListViewItemDragBackground}"
                        DragForeground="{ThemeResource ListViewItemDragForeground}"
                        FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                        FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                        PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
                        PointerOverBackground="{ThemeResource SystemControlHighlightAltTransparentBrush}"
                        PointerOverForeground="{ThemeResource SystemControlForegroundAltHighBrush}"
                        SelectedBackground="Transparent"
                        SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
                        SelectedPointerOverBackground="{ThemeResource SystemControlBackgroundAccentBrush}"
                        PressedBackground="{ThemeResource SystemControlHighlightAltTransparentBrush}"
                        SelectedPressedBackground="{ThemeResource SystemControlBackgroundAccentBrush}"
                        DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                        DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                        ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        ContentMargin="{TemplateBinding Padding}"
                        CheckMode="{ThemeResource ListViewItemCheckMode}" RevealBackgroundShowsAboveContent="True"
                        RevealBackground="{ThemeResource ListViewItemRevealBackground}"
                        RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}"
                        RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}">

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Selected" />

                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PointerOverSelected">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PointerOverPressed">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PressedSelected">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="DisabledStates">
                                        <VisualState x:Name="Enabled" />

                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="Root.RevealBorderThickness" Value="0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>
                            </ListViewItemPresenter>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Storyboard x:Name="ModalIn" >
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ModalOverlay" Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame Value="Visible" KeyTime="0"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimation Storyboard.TargetName="ModalOverlay" To="1" Storyboard.TargetProperty="Opacity" EnableDependentAnimation="False">
                    <DoubleAnimation.EasingFunction>
                        <QuinticEase/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ModalRing" Storyboard.TargetProperty="IsActive">
                    <DiscreteObjectKeyFrame Value="True" KeyTime="0"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BlurBehavior" Storyboard.TargetProperty="Value">
                    <DiscreteObjectKeyFrame Value="32" KeyTime="0"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ModalRing" Storyboard.TargetProperty="IsEnabled">
                    <DiscreteObjectKeyFrame Value="True" KeyTime="0"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Name="ModalOut" >
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ModalOverlay" Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame Value="Collapsed" KeyTime="0:0:0.96"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimation Storyboard.TargetName="ModalOverlay" To="0" Storyboard.TargetProperty="Opacity" EnableDependentAnimation="False">
                    <DoubleAnimation.EasingFunction>
                        <QuinticEase/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ModalRing" Storyboard.TargetProperty="IsActive">
                    <DiscreteObjectKeyFrame Value="False" KeyTime="0"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BlurBehavior" Storyboard.TargetProperty="Value">
                    <DiscreteObjectKeyFrame Value="0" KeyTime="0"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ModalRing" Storyboard.TargetProperty="IsEnabled">
                    <DiscreteObjectKeyFrame Value="False" KeyTime="0"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>

            <DataTemplate x:Key="AlbumTemplate" x:DataType="vm:GenericMusicItemViewModel">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.RowSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Uniform">
                        <Image.Source>
                            <BitmapImage DecodePixelWidth="80" UriSource="{x:Bind Artwork, TargetNullValue=ms-appx:///Assets/Images/placeholder_b.png}"/>
                        </Image.Source>
                    </Image>
                    <TextBlock Text="{x:Bind Title}" Style="{ThemeResource BaseTextBlockStyle}" MaxLines="2" TextWrapping="WrapWholeWords" TextTrimming="CharacterEllipsis" Margin="12,8" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    <TextBlock Style="{ThemeResource BodyTextBlockStyle}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="12,8" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center">
                        <Run Text="{x:Bind Description}"/><Run Text=" - "/><Run Text="{x:Bind Addtional}"/>
                    </TextBlock>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="SearchSuggestionTemplate" x:DataType="vm:GenericMusicItemViewModel">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <FontIcon FontSize="15" FontFamily="Segoe MDL2 Assets" HorizontalAlignment="Center" VerticalAlignment="Center" Glyph="{x:Bind Description}" Margin="0,0,4,0"/>
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Stretch" Text="{x:Bind Title}" Style="{ThemeResource BodyTextBlockStyle}" MaxLines="1" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Margin="4,0"/>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="PlaceholderTemplate" x:DataType="vm:GenericMusicItemViewModel">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid Width="48" Height="48" Grid.RowSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" Margin="0,8,8,8"/>
                    <Grid Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Height="13" Margin="8" Width="200" Background="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                    <Grid Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Height="9" Width="160" Margin="8,0,8,8" Background="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="SongTemplate" x:DataType="vm:GenericMusicItemViewModel">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto" MinHeight="8"/>
                    </Grid.RowDefinitions>
                    <FontIcon FontFamily="Segoe MDL2 Assets" Grid.RowSpan="3" VerticalAlignment="Center" Glyph="{x:Bind OnlineToSymbol(IsOnline)}" Margin="0,0,8,0"/>
                    <TextBlock Style="{ThemeResource BodyTextBlockStyle}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Margin="4,8,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1">
                        <Run Text="{x:Bind Title}" FontWeight="Bold"/>
                    </TextBlock>
                    <TextBlock Style="{ThemeResource BodyTextBlockStyle}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1">
                        <Run Text="{x:Bind Description}"/><Run Text=" - "/><Run Text="{x:Bind Addtional}"/>
                    </TextBlock>
                    <TextBlock Text="Online Content" Grid.Row="2" Grid.Column="1"  Style="{ThemeResource BodyTextBlockStyle}" Foreground="{ThemeResource SystemControlHighlightAccent2RevealBackgroundBrush}" Margin="4,0,4,8" FontSize="10" Visibility="{x:Bind BooltoVisibility(IsOnline)}"/>
                </Grid>
            </DataTemplate>

            <controls:HomePageTemplateSeletor x:Key="GenericItemSelector" SearchSuggestTemplate="{StaticResource SearchSuggestionTemplate}" PlaceholderTemplate="{StaticResource PlaceholderTemplate}" SongTemplate="{StaticResource SongTemplate}" AlbumTemplate="{StaticResource AlbumTemplate}"/>


            <MenuFlyout x:Key="SongFlyout">
                <MenuFlyoutItem x:Uid="Play" Click="MenuFlyoutPlay_Click" Text="Play">
                    <MenuFlyoutItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE768;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem x:Uid="PlayNext" Click="MenuFlyoutPlayNext_Click" Text="Play Next">
                    <MenuFlyoutItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE298;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Click="MenuFlyoutAlbum_Click" x:Name="AlbumMenu">
                    <MenuFlyoutItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE93C;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem x:Uid="AddCollection" Text="Add to Collection" Click="MenuFlyoutCollection_Click">
                    <MenuFlyoutItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE7B8;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem x:Uid="Share" Click="MenuFlyoutShare_Click" Text="Share">
                    <MenuFlyoutItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE72D;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem x:Uid="ModifyTag" Visibility="Collapsed" Click="MenuFlyoutModify_Click" Text="Modify Tag">
                    <MenuFlyoutItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE929;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem x:Uid="OpenExplorer" Click="MenuFlyoutRevealExplorer_Click" Text="Open in Explorer">
                    <MenuFlyoutItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEC50;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutSubItem x:Uid="Delete" Foreground="#E81123" Text="Delete">
                    <MenuFlyoutSubItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE107;" />
                    </MenuFlyoutSubItem.Icon>
                    <MenuFlyoutItem x:Uid="DeleteTrash" Click="MenuFlyoutTrash_Click" Text="Move to Trash">

                    </MenuFlyoutItem>
                    <MenuFlyoutItem x:Uid="DeletePerm" Click="MenuFlyoutDelete_Click" Text="Permanent Delete">

                    </MenuFlyoutItem>
                </MenuFlyoutSubItem>
            </MenuFlyout>
        </ResourceDictionary>
    </Page.Resources>

    <Page.DataContext>
        <vm:MainPageViewModel x:Name="Context"/>
    </Page.DataContext>

    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                    <DrillInNavigationTransitionInfo/>
                </NavigationThemeTransition.DefaultNavigationTransitionInfo>
            </NavigationThemeTransition>
            <EntranceThemeTransition />
        </TransitionCollection>
    </Page.Transitions>

    <SplitView AllowDrop="True" DragOver="Root_DragOver" Drop="Root_Drop" OpenPaneLength="320" x:Name="Root" Background="{x:Null}" Style="{StaticResource MainPageSplitViewStyle}" DisplayMode="Overlay" >

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Narrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Artwork.Visibility" Value="Collapsed"/>
                        <Setter Target="PositionNarrow.Visibility" Value="Visible"/>
                        <Setter Target="PositionFull.Visibility" Value="Collapsed"/>
                        <Setter Target="PlayListNarrow.Visibility" Value="Visible"/>
                        <Setter Target="PlayListFull.Visibility" Value="Collapsed"/>
                        <Setter Target="PlayListBtn.Margin" Value="4,0"/>
                        <Setter Target="NowPanelTexts.Margin" Value="4,0"/>
                        <Setter Target="SearchBoxWidth.To" Value="240"/>

                        <Setter Target="Previous.Margin" Value="2"/>
                        <Setter Target="PlayPause.Margin" Value="2"/>
                        <Setter Target="Next.Margin" Value="2"/>
                        <Setter Target="Stop.Margin" Value="2"/>
                        <Setter Target="Shuffle.Margin" Value="2"/>
                        <Setter Target="Refresh.Margin" Value="2"/>
                        <Setter Target="Stop.Visibility" Value="Collapsed"/>
                        <Setter Target="Shuffle.Visibility" Value="Collapsed"/>
                        <Setter Target="Refresh.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Medium">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="641"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Artwork.Visibility" Value="Visible"/>
                        <Setter Target="PositionNarrow.Visibility" Value="Visible"/>
                        <Setter Target="PositionFull.Visibility" Value="Collapsed"/>
                        <Setter Target="PlayListNarrow.Visibility" Value="Collapsed"/>
                        <Setter Target="PlayListFull.Visibility" Value="Visible"/>
                        <Setter Target="PlayListBtn.Margin" Value="8,0"/>
                        <Setter Target="NowPanelTexts.Margin" Value="8,0"/>


                        <Setter Target="Previous.Margin" Value="4"/>
                        <Setter Target="PlayPause.Margin" Value="4"/>
                        <Setter Target="Next.Margin" Value="4"/>
                        <Setter Target="Stop.Margin" Value="4"/>
                        <Setter Target="Shuffle.Margin" Value="4"/>
                        <Setter Target="Refresh.Margin" Value="4"/>
                        <Setter Target="Stop.Visibility" Value="Collapsed"/>
                        <Setter Target="Shuffle.Visibility" Value="Visible"/>
                        <Setter Target="Refresh.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Full">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1008"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Artwork.Visibility" Value="Visible"/>
                        <Setter Target="PositionNarrow.Visibility" Value="Collapsed"/>
                        <Setter Target="PositionFull.Visibility" Value="Visible"/>
                        <Setter Target="PlayListNarrow.Visibility" Value="Collapsed"/>
                        <Setter Target="PlayListFull.Visibility" Value="Visible"/>
                        <Setter Target="PlayListBtn.Margin" Value="12,0"/>
                        <Setter Target="NowPanelTexts.Margin" Value="12,0"/>

                        <Setter Target="Previous.Margin" Value="4"/>
                        <Setter Target="PlayPause.Margin" Value="4"/>
                        <Setter Target="Next.Margin" Value="4"/>
                        <Setter Target="Stop.Margin" Value="4"/>
                        <Setter Target="Shuffle.Margin" Value="4"/>
                        <Setter Target="Refresh.Margin" Value="4"/>
                        <Setter Target="Stop.Visibility" Value="Visible"/>
                        <Setter Target="Shuffle.Visibility" Value="Visible"/>
                        <Setter Target="Refresh.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <SplitView.Pane>
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="180">
                        <Grid.Background>
                            <ImageBrush Opacity="0.1" Stretch="UniformToFill" AlignmentX="Center" AlignmentY="Center">
                                <ImageBrush.ImageSource>
                                    <BitmapImage UriSource="{x:Bind Context.CurrentArtwork, Mode=OneWay, TargetNullValue=ms-appx:///Assets/Images/pane_placeholder.png}"/>
                                </ImageBrush.ImageSource>
                            </ImageBrush>
                        </Grid.Background>
                    </Grid>
                    <Button x:Uid="Collapse" Style="{ThemeResource MainPageHamStyle}" Background="Transparent" ToolTipService.ToolTip="Collapse"
                        HorizontalAlignment="Left" VerticalAlignment="Top" Click="Toggle_PaneOpened"
                        Margin="0,32,0,0" Width="48" Height="48">
                        <Button.Content>
                            <FontIcon Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" FontFamily="Segoe MDL2 Assets" Glyph="&#xE112;" />
                        </Button.Content>
                    </Button>
                    <TextBlock x:Uid="Now" Visibility="{x:Bind Context.NullableBooltoVisibility(Context.IsPlaying), Mode=OneWay}" 
                           OpticalMarginAlignment="None" Margin="60,32,0,0" 
                           Style="{ThemeResource SubheaderTextBlockStyle}"
                           Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" 
                               HorizontalAlignment="Left" VerticalAlignment="Top" 
                           FontWeight="Bold" Text="Now"/>
                    <StackPanel Visibility="{x:Bind Context.NullableBooltoVisibility(Context.IsPlaying), Mode=OneWay}" 
                                Background="{ThemeResource SystemControlAltMediumLowAcrylicElementMediumBrush}" Orientation="Horizontal" 
                                HorizontalAlignment="Right" VerticalAlignment="Bottom">
                        <TextBlock MaxLines="1" TextWrapping="NoWrap" TextTrimming="Clip" x:Name="NowPlayingTitle" 
                                   Margin="8" TextAlignment="Right" Text="{x:Bind Context.CurrentTitle, Mode=OneWay}" 
                                   Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" Style="{ThemeResource TitleTextBlockStyle}" 
                                   HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE189;" Margin="8" 
                                  Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" 
                                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </StackPanel>
                </Grid>
                <ListView x:Name="HamPane" SelectionMode="None" IsItemClickEnabled="True" ItemClick="ListView_ItemClick" 
                          ItemsSource="{x:Bind Context.HamList}" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                          ItemContainerStyle="{ThemeResource PaneListItemStyle}">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="vm:HamPanelItem">
                            <Grid Height="180">
                                <Grid.Background>
                                    <ImageBrush Opacity="{x:Bind BoolToOpacity(IsCurrent),Mode=OneWay}" AlignmentX="Center" AlignmentY="Center" Stretch="UniformToFill">
                                        <ImageBrush.ImageSource>
                                            <BitmapImage UriSource="{x:Bind BG}" DecodePixelHeight="180" DecodePixelType="Logical"/>
                                        </ImageBrush.ImageSource>
                                    </ImageBrush>
                                </Grid.Background>
                                <StackPanel Background="{ThemeResource SystemControlAltMediumLowAcrylicElementMediumBrush}" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                    <TextBlock Margin="8" TextAlignment="Right" Text="{x:Bind Title}" Foreground="{x:Bind ChangeTextForeground(IsCurrent), Mode=OneWay}" Style="{ThemeResource TitleTextBlockStyle}" FontWeight="{x:Bind ChangeWeight(IsCurrent), Mode=OneWay}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{x:Bind Icon}" Margin="8" Foreground="{x:Bind ChangeForeground(IsCurrent), Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <Grid Grid.Row="2" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Height="48" Command="{x:Bind Context.GotoSettings}" Click="Button_Click" Padding="0" VerticalContentAlignment="Center"
                            HorizontalContentAlignment="Left" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                            Style="{ThemeResource RevealRectangleButton}" BorderThickness="0" >
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Center" Height="48">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE115;" Width="48" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            <TextBlock x:Uid="Settings" Grid.Column="1" Margin="8,0" Text="Settings"
                                       Style="{ThemeResource SubtitleTextBlockStyle}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Grid>
                    </Button>
                    <Button x:Uid="About" ToolTipService.ToolTip="About" Click="Button_Click" Width="48" Height="48" Grid.Column="1" Command="{x:Bind Context.GotoAbout}"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{ThemeResource RevealRectangleButton}" BorderThickness="0" >
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xED59;" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Button>
                </Grid>
            </Grid>
        </SplitView.Pane>
        <SplitView.Content>
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.Resources>
                    <Storyboard x:Name="SearchBoxShow">
                        <DoubleAnimation x:Name="SearchBoxWidth" Duration="0:0:0.64" Storyboard.TargetName="SearchBox" EnableDependentAnimation="True" Storyboard.TargetProperty="Width" To="320">
                            <DoubleAnimation.EasingFunction>
                                <QuinticEase/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchBox" Storyboard.TargetProperty="Opacity">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchButton" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard x:Name="SearchBoxCollapse">
                        <DoubleAnimation Duration="0:0:0.64" Storyboard.TargetName="SearchBox" EnableDependentAnimation="True" Storyboard.TargetProperty="Width" To="48">
                            <DoubleAnimation.EasingFunction>
                                <QuinticEase/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchBox" Storyboard.TargetProperty="Opacity">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="0"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchButton" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </Grid.Resources>
                <Frame Visibility="Visible" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="MainFrame"/>
                <Grid Visibility="{x:Bind Context.BooltoVisibility(Context.NeedShowPanel), Mode=OneWay}" 
                      HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="74" x:Name="NowPanel"
                      Background="{ThemeResource SystemControlAltTranslucentAcrylicElementBrush}">

                    <animations:Implicit.ShowAnimations>
                        <animations:TranslationAnimation Duration="0:0:1" From="0,96,0" To="0" ></animations:TranslationAnimation>
                    </animations:Implicit.ShowAnimations>

                    <animations:Implicit.HideAnimations>
                        <animations:TranslationAnimation Duration="0:0:1" From="0" To="0,96,0"></animations:TranslationAnimation>
                    </animations:Implicit.HideAnimations>


                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Button Style="{ThemeResource RevealRectangleButton}" BorderThickness="0" Background="Transparent" Grid.Row="1" HorizontalContentAlignment="Left"
                            Click="NowPanel_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Stretch">
                                <Image Grid.Row="1" x:Name="Artwork" HorizontalAlignment="Left" VerticalAlignment="Stretch" Stretch="Uniform">
                                    <Image.Source>
                                        <BitmapImage DecodePixelHeight="72" DecodePixelType="Logical" UriSource="{x:Bind Context.CurrentArtwork, Mode=OneWay, TargetNullValue=ms-appx:///Assets/Images/now_placeholder.png}"/>
                                    </Image.Source>
                                </Image>
                                <StackPanel x:Name="NowPanelTexts" Margin="12,0" Grid.Row="1" Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Center">
                                    <TextBlock x:Name="Title" Text="{x:Bind Context.CurrentTitle, Mode=OneWay}" Style="{ThemeResource BaseTextBlockStyle}" MaxLines="2" TextTrimming="CharacterEllipsis" Margin="4"/>
                                    <TextBlock x:Name="Album" Text="{x:Bind Context.CurrentAlbum, Mode=OneWay}" Style="{ThemeResource BodyTextBlockStyle}" MaxLines="1" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="4,0,4,4"/>
                                </StackPanel>
                            </StackPanel>
                        </Button.Content>

                    </Button>
                    <Button AccessKey="L" x:Uid="PlayList" x:Name="PlayListBtn" Grid.Row="1" Style="{ThemeResource RevealRectangleButton}" ToolTipService.ToolTip="Playing list" Grid.Column="2" Margin="12,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Button.Content>
                            <Grid>
                                <TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="PlayListFull" Text="{x:Bind Context.NowListPreview,Mode=OneWay}" Style="{ThemeResource BodyTextBlockStyle}" Margin="12,8"/>
                                <FontIcon x:Name="PlayListNarrow" Visibility="Collapsed" FontSize="15" Margin="8" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontFamily="Segoe MDL2 Assets" Glyph="&#xE12F;" />
                            </Grid>
                        </Button.Content>
                        <Button.Flyout>
                            <Flyout Opened="Flyout_Opened">
                                <ListView x:Name="NowPlayingFlyout" ItemTemplate="{StaticResource PlayingListTemplate}" 
                                          MaxHeight="360" IsSynchronizedWithCurrentItem="False" 
                                          ItemContainerStyleSelector="{StaticResource SongListStyleSelector}" 
                                          SelectedIndex="{x:Bind Context.CurrentIndex, Mode=OneWay,FallbackValue=-1}" 
                                          ItemsSource="{x:Bind Context.NowPlayingList}">
                                    <ListView.Header>
                                        <TextBlock Text="Not Playing" x:Uid="NotPlaying" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                   Visibility="{x:Bind Context.CollapseIfNotZero(Context.NowPlayingList.Count),Mode=OneWay}" 
                                                   Style="{ThemeResource SubtitleTextBlockStyle}" Margin="36,12"/>
                                    </ListView.Header>
                                </ListView>
                            </Flyout>
                        </Button.Flyout>
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="Control" Key="L" />
                        </Button.KeyboardAccelerators>
                    </Button>
                    <Grid Grid.Row="1" Grid.Column="3" Margin="4,0"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <TextBlock x:Name="PositionNarrow" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{x:Bind PositionNarrowToString(Context.CurrentPosition), Mode=OneWay}" Margin="4"/>
                        <TextBlock x:Name="PositionFull" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{x:Bind PositionToString(Context.CurrentPosition, Context.TotalDuration), Mode=OneWay}" Margin="4"/>
                    </Grid>
                    <StackPanel Grid.Row="1" Orientation="Horizontal" Grid.Column="4" Margin="4,0"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Button AccessKey="[" x:Uid="Previous" x:Name="Previous" Style="{ThemeResource RevealRoundButton}" Command="{x:Bind Context.GoPrevious}" ToolTipService.ToolTip="Previous"
                                Width="48" Height="48" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                            <Button.Content>
                                <SymbolIcon Symbol="Previous"/>
                            </Button.Content>
                            <Button.KeyboardAccelerators>
                                <KeyboardAccelerator Key="F1" />
                            </Button.KeyboardAccelerators>
                        </Button>
                        <Button AccessKey="P" x:Name="PlayPause" Style="{ThemeResource RevealRoundButton}" Command="{x:Bind Context.PlayPause}" ToolTipService.ToolTip="{x:Bind Context.NullableBoolToString(Context.IsPlaying), Mode=OneWay}"
                                Width="48" Height="48" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                            <Button.Content>
                                <SymbolIcon Symbol="{x:Bind Context.NullableBoolToSymbol(Context.IsPlaying), Mode=OneWay}"/>
                            </Button.Content>
                            <Button.KeyboardAccelerators>
                                <KeyboardAccelerator Modifiers="Control" Key="P" />
                                <KeyboardAccelerator Key="F2" />
                            </Button.KeyboardAccelerators>
                        </Button>
                        <Button AccessKey="]" x:Uid="Next" x:Name="Next" Style="{ThemeResource RevealRoundButton}" Command="{x:Bind Context.GoNext}" ToolTipService.ToolTip="Next"
                                Width="48" Height="48" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                            <Button.Content>
                                <SymbolIcon Symbol="Next"/>
                            </Button.Content>
                            <Button.KeyboardAccelerators>
                                <KeyboardAccelerator Key="F3" />
                            </Button.KeyboardAccelerators>
                        </Button>

                        <Button AccessKey="E" x:Uid="Stop" x:Name="Stop" Style="{ThemeResource RevealRoundButton}" Command="{x:Bind Context.Stop}" ToolTipService.ToolTip="Stop"
                                Width="48" Height="48" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                            <Button.Content>
                                <SymbolIcon Symbol="Stop"/>
                            </Button.Content>
                            <Button.KeyboardAccelerators>
                                <KeyboardAccelerator Modifiers="Control" Key="E" />
                                <KeyboardAccelerator Key="F4" />
                            </Button.KeyboardAccelerators>
                        </Button>

                        <ToggleButton x:Uid="Shuffle" x:Name="Shuffle" Style="{ThemeResource RevealRoundToggleButton}" IsChecked="{x:Bind Context.IsShuffle, Mode=TwoWay}" ToolTipService.ToolTip="Shuffle"
                                      Width="48" Height="48" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                            <ToggleButton.Content>
                                <SymbolIcon Symbol="Shuffle"/>
                            </ToggleButton.Content>
                        </ToggleButton>

                        <ToggleButton x:Uid="Loop" x:Name="Refresh" Style="{ThemeResource RevealRoundToggleButton}" IsChecked="{x:Bind Context.IsLoop, Mode=TwoWay}" ToolTipService.ToolTip="Loop"
                                      Width="48" Height="48" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                            <ToggleButton.Content>
                                <SymbolIcon Symbol="Refresh"/>
                            </ToggleButton.Content>
                        </ToggleButton>
                    </StackPanel>
                    <ProgressBar Background="{x:Null}" Foreground="{ThemeResource SystemControlBackgroundBaseLowRevealBorderBrush}" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.ColumnSpan="5" 
                                 Value="{x:Bind Context.BufferProgress, Mode=OneWay}"/>
                    <ProgressBar Background="{x:Null}" Foreground="{ThemeResource SystemControlBackgroundBaseHighBrush}" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.ColumnSpan="5" 
                                 Value="{x:Bind Context.PositionToValue(Context.CurrentPosition, Context.TotalDuration), Mode=OneWay}"/>
                </Grid>
                <Frame x:Name="OverlayFrame" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                <Button AccessKey="M" x:Uid="SplitPaneOpen" Style="{ThemeResource RevealRectangleButton}" Background="Transparent" Foreground="{x:Bind Context.LeftTopColor, Mode=OneWay}"
                        HorizontalAlignment="Left" VerticalAlignment="Top" Click="Toggle_PaneOpened" ToolTipService.ToolTip="Open"
                        Margin="0,32,0,0" Width="48" Height="48">
                    <Button.Content>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE700;" />
                    </Button.Content>
                    <Button.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="M" />
                    </Button.KeyboardAccelerators>
                </Button>
                <TextBlock Visibility="{x:Bind Context.BooltoVisibility(Context.NeedShowTitle), Mode=OneWay}" 
                           OpticalMarginAlignment="None" Margin="60,32,0,0" 
                           Style="{ThemeResource SubheaderTextBlockStyle}"
                           Foreground="{x:Bind Context.LeftTopColor, Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Top" 
                           FontWeight="Bold" Text="{x:Bind Context.Title,Mode=OneWay}"/>

                <Grid Visibility="Collapsed" Opacity="0" x:Name="ModalOverlay" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{ThemeResource SystemControlAltLowBrush}">
                        <interactivity:Interaction.Behaviors>
                            <behaviors:Blur x:Name="BlurBehavior" Duration="1000" Value="0" Delay="0" AutomaticallyStart="True"/>
                        </interactivity:Interaction.Behaviors>
                    </Grid>
                    <ProgressRing Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" x:Name="ModalRing" HorizontalAlignment="Center" VerticalAlignment="Center" Width="48" Height="48" IsActive="False" IsEnabled="False"/>
                    <TextBlock x:Uid="Waiting"  Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" Text="Waiting" x:Name="ModalText" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{ThemeResource TitleTextBlockStyle}" Margin="0,80,0,0"/>
                </Grid>

                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="Transparent" 
                      Height="32" x:Name="TitleBar" Loaded="TitleBar_Loaded">
                    <TextBlock x:Uid="AppName"  Style="{ThemeResource CaptionTextBlockStyle}" Visibility="{x:Bind Context.BooltoVisibility(Context.NeedShowTitle), Mode=OneWay}"
                               Margin="60,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" 
                               Foreground="{x:Bind Context.LeftTopColor, Mode=OneWay}"/>
                </Grid>
                <Grid HorizontalAlignment="Right" VerticalAlignment="Top" 
                      Height="32" x:Name="TitleBarOverlay" Visibility="Visible" >
                    <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="1" BorderThickness="0" BorderBrush="{x:Null}" x:Name="TitlebarBtm" Background="{StaticResource SystemControlBackgroundTransparentRevealBorderBrush}"/>
                    <AutoSuggestBox AutoMaximizeSuggestionArea="True" Loaded="SearchBox_Loaded" LosingFocus="SearchBox_LosingFocus" Style="{ThemeResource BlockAutoSuggestBox}" QuerySubmitted="SearchBox_QuerySubmitted" SuggestionChosen="SearchBox_SuggestionChosen"
                                    PlaceholderText="{x:Bind Context.PlaceholderText,Mode=OneWay}" QueryIcon="Find" x:Name="SearchBox" TextChanged="SearchBox_TextChanged" ItemsSource="{x:Bind Context.SearchItems, Mode=OneWay}"
                                    HorizontalAlignment="Right" Opacity="0" VerticalAlignment="Stretch" Width="48" ItemTemplateSelector="{StaticResource GenericItemSelector}">
                    </AutoSuggestBox>
                    <Button AccessKey="F" Foreground="{x:Bind Context.LeftTopColor, Mode=OneWay}" x:Name="SearchButton" Click="SearchButton_Click" Background="Transparent" Style="{ThemeResource NoBorderButton}" Width="48" HorizontalAlignment="Right" VerticalAlignment="Stretch" BorderThickness="1,0,0,1" BorderBrush="{StaticResource SystemControlBackgroundTransparentRevealBorderBrush}">
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="Control" Key="F" />
                        </Button.KeyboardAccelerators>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE11A;" FontSize="13"/>
                    </Button>
                </Grid>

                <toolkit:InAppNotification x:Name="InAppNotify" Style="{ThemeResource ToastNotificationStyle}" Content=""
                                    AnimationDuration="00:00:00.72" VerticalOffset="16" HorizontalOffset="0"/>

                <toolkit:InAppNotification x:Name="ProgressUpdateNotify" Style="{ThemeResource ProgressNotificationStyle}"
                                    AnimationDuration="00:00:00.72" VerticalOffset="0" HorizontalOffset="344" ShowDismissButton="True">
                    <toolkit:InAppNotification.Content>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <toolkit:RadialProgressBar x:Name="ProgressUpdateProgress" HorizontalAlignment="Left" VerticalAlignment="Center"
                                                       Margin="8"
                                                       Foreground="{ThemeResource SystemControlForegroundAccentBrush}"
                                                       Thickness="4" Minimum="0" Maximum="100" Width="36" Height="36"
                                                       Outline="{ThemeResource SystemControlBackgroundBaseLowRevealBorderBrush}"/>
                            <StackPanel Margin="8" Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                <TextBlock x:Name="ProgressUpdateTitle" FontSize="18" FontWeight="Bold" Style="{ThemeResource SubtitleTextBlockStyle}"/>
                                <TextBlock x:Name="ProgressUpdateContent" Style="{ThemeResource BodyTextBlockStyle}"/>
                            </StackPanel>
                        </StackPanel>
                    </toolkit:InAppNotification.Content>
                </toolkit:InAppNotification>
            </Grid>
        </SplitView.Content>
    </SplitView>

</Page>
