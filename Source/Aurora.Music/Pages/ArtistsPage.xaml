<!--
Copyright (c) Aurora Studio. All rights reserved.

Licensed under the MIT License. See LICENSE in the project root for license information.
-->
<Page
    x:Class="Aurora.Music.Pages.ArtistsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Aurora.Music.Pages"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:vm="using:Aurora.Music.ViewModels"
    Unloaded="Page_Unloaded"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
            </NavigationThemeTransition>
            <EntranceThemeTransition />
        </TransitionCollection>
    </Page.Transitions>

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Themes/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light" Source="../Themes/Light.xaml"/>
                <ResourceDictionary x:Key="Dark" Source="../Themes/Dark.xaml"/>
            </ResourceDictionary.ThemeDictionaries>
            <CollectionViewSource x:Name="ArtistListSource" x:Key="ArtistListSource" IsSourceGrouped="True" Source="{x:Bind Context.ArtistList,Mode=OneWay}"/>

        </ResourceDictionary>
    </Page.Resources>

    <Page.DataContext>
        <vm:ArtistsPageViewModel x:Name="Context"/>
    </Page.DataContext>
    
    <Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Narrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderGroup.Margin" Value="48,32"/>
                        <Setter Target="ArtistList.Padding" Value="0,0,0,160"/>
                        <Setter Target="GroupStyle.HeaderTemplate" Value="{StaticResource NarrowGroupHeader}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Medium">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="641"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderGroup.Margin" Value="32"/>
                        <Setter Target="ArtistList.Padding" Value="16,0,16,160"/>
                        <Setter Target="GroupStyle.HeaderTemplate" Value="{StaticResource NormalGroupHeader}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Full">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1008"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderGroup.Margin" Value="32"/>
                        <Setter Target="ArtistList.Padding" Value="32,0,32,160"/>
                        <Setter Target="GroupStyle.HeaderTemplate" Value="{StaticResource NormalGroupHeader}"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <SemanticZoom ViewChangeCompleted="SemanticZoom_ViewChangeCompleted">
            <SemanticZoom.ZoomedOutView>
                <GridView Padding="64,128,64,0" FontSize="20" ItemsSource="{x:Bind ArtistListSource.View.CollectionGroups, Mode=OneWay}">
                    <GridView.Header>
                        <Grid Height="280"/>
                    </GridView.Header>
                    <GridView.Footer>
                        <Grid Height="160"/>
                    </GridView.Footer>
                </GridView>
            </SemanticZoom.ZoomedOutView>
            <SemanticZoom.ZoomedInView>
                <GridView animations:ReorderGridAnimation.Duration="360" ItemClick="ArtistList_ItemClick" 
                          IsSynchronizedWithCurrentItem="False" IsItemClickEnabled="True" 
              SelectionMode="None" ItemsSource="{x:Bind ArtistListSource.View, Mode=OneWay}" Loaded="ArtistList_Loaded"
              Padding="32,0" ItemContainerStyle="{StaticResource GeneralGridViewItemStyle}" 
                          ContextRequested="ArtistList_ContextRequested" ContextCanceled="ArtistList_ContextCanceled"
              Style="{StaticResource GeneralGridViewStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
              x:Name="ArtistList">
                    <GridView.GroupStyle>
                        <GroupStyle HeaderTemplate="{StaticResource NormalGroupHeader}"/>
                    </GridView.GroupStyle>
                    <GridView.Header>
                        <Grid Height="400"/>
                    </GridView.Header>
                    <GridView.Footer>
                        <Grid Height="160"/>
                    </GridView.Footer>
                    <GridView.ItemTemplate>
                        <DataTemplate x:DataType="vm:ArtistViewModel">
                            <Grid Background="{x:Null}" x:Name="ArtistCell" PointerEntered="ArtistCell_PointerEntered" 
                          PointerPressed="ArtistCell_PointerPressed" PointerExited="ArtistCell_PointerExited"
                          PointerReleased="ArtistCell_PointerReleased" PointerCaptureLost="ArtistCell_PointerExited" 
                          PointerCanceled="ArtistCell_PointerExited">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <toolkit:ImageEx x:Name="ArtistImage" Source="{x:Bind AvatarImage, Mode=OneWay}" 
                                                 PlaceholderSource="/Assets/Images/artist_placeholder.png" 
                                                 PlaceholderStretch="Uniform" Stretch="Uniform" Style="{ThemeResource QuickLoadImageEx}"
                                                 HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8,4" 
                                                 Width="100" Height="100" CornerRadius="999">
                                </toolkit:ImageEx>
                                <StackPanel Orientation="Vertical" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                            Width="100" Margin="0,4">
                                    <TextBlock x:Name="ArtistName" Text="{x:Bind Name}" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                               MaxLines="1" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" 
                                               Style="{ThemeResource BaseTextBlockStyle}" Margin="0,0"/>
                                    <TextBlock Text="{x:Bind CountToString(SongsCount)}" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                               MaxLines="1" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" 
                                               Style="{ThemeResource BodyTextBlockStyle}" Margin="0,4"/>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </GridView.ItemTemplate>
                </GridView>
            </SemanticZoom.ZoomedInView>
        </SemanticZoom>

        <Grid Height="360" x:Name="Header" HorizontalAlignment="Stretch" VerticalAlignment="Top">
            <Grid x:Name="BGBlur" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="360" Background="{ThemeResource SystemControlAltTranslucentAcrylicElementBrush}"/>
            <Image x:Name="HeaderBG" Stretch="UniformToFill" 
                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Image.Source>
                    <BitmapImage UriSource="/Assets/Images/artists_bg.png" DecodePixelHeight="360" DecodePixelType="Logical"/>
                </Image.Source>
            </Image>
            <Grid x:Name="HeaderBGOverlay" HorizontalAlignment="Stretch" Height="360" Background="{ThemeResource ArtistsPageGradient}">
            </Grid>
            <Grid x:Name="HeaderGroup" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="32">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid Canvas.ZIndex="9999" x:Name="TitleShrink" Background="{x:Null}"
                          HorizontalAlignment="Left" VerticalAlignment="Center" Height="48">
                    <TextBlock x:Uid="Artists" Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" Margin="12,0" Text="Artists" 
                                   HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold"
                                   TextWrapping="NoWrap" MaxLines="1" Style="{ThemeResource SubheaderTextBlockStyle}" 
                                   TextTrimming="Clip"/>
                </Grid>
                <Grid Canvas.ZIndex="9999" x:Name="Title" Background="{ThemeResource SystemControlBackgroundAccentBrush}" 
                          HorizontalAlignment="Left" VerticalAlignment="Center" Height="48">
                    <TextBlock x:Uid="Artists" Foreground="{ThemeResource SystemControlForegroundAltHighBrush}" Margin="12,0" Text="Artists" 
                                   HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold"
                                   TextWrapping="NoWrap" MaxLines="1" Style="{ThemeResource SubheaderTextBlockStyle}" 
                                   TextTrimming="Clip"/>
                </Grid>
                <StackPanel Grid.Row="1" x:Name="Details" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,8">
                    <Grid VerticalAlignment="Bottom" Margin="0,0,4,0" 
                              Background="{ThemeResource SystemControlBackgroundAccentBrush}">
                        <TextBlock Style="{ThemeResource BodyTextBlockStyle}" 
                                       Foreground="{ThemeResource SystemControlForegroundAltHighBrush}" 
                                       Text="{x:Bind Context.ArtistsCount,Mode=OneWay}" Margin="12,8"/>
                    </Grid>
                    <Grid VerticalAlignment="Center" Margin="4,0,4,0" 
                              Background="{ThemeResource SystemControlBackgroundAccentBrush}">
                        <TextBlock Style="{ThemeResource BodyTextBlockStyle}" 
                                       Foreground="{ThemeResource SystemControlForegroundAltHighBrush}" 
                                       Text="{x:Bind Context.SongsCount,Mode=OneWay}" Margin="12,8"/>
                    </Grid>
                </StackPanel>
            </Grid>
            <StackPanel Height="48" HorizontalAlignment="Right" VerticalAlignment="Bottom" Orientation="Horizontal" Margin="32,0">
                <Button Margin="8,0" Command="{x:Bind Context.PlayAll}" Style="{ThemeResource PlayAllButton}" 
                        HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </StackPanel>
        </Grid>
    </Grid>
</Page>
