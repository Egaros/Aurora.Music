<Page
    x:Class="Aurora.Music.Pages.HomePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Aurora.Music.Pages" SizeChanged="Page_SizeChanged"
    xmlns:vm="using:Aurora.Music.ViewModels"
    xmlns:ctrls="using:Aurora.Music.Controls"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.DataContext>
        <vm:HomePageViewModel x:Name="Context"/>
    </Page.DataContext>

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Themes/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <LinearGradientBrush x:Key="HomePageGradient" EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFFFFFFF"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </LinearGradientBrush>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <LinearGradientBrush x:Key="HomePageGradient" EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF000000"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </LinearGradientBrush>
                </ResourceDictionary>
                <ResourceDictionary x:Key="HighContrast">
                    <SolidColorBrush x:Key="myBrush" Color="{ThemeResource SystemColorButtonFaceColor}"/>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>

            <AcrylicBrush x:Key="HomePageBackground" BackgroundSource="HostBackdrop" 
                          TintColor="{StaticResource SystemChromeAltHighColor}" TintOpacity="0" 
                          FallbackColor="{StaticResource SystemChromeMediumColor}" />

            <Style x:Key="HeroGridViewStyle" TargetType="GridView">
                <Setter Property="Padding" Value="0,0,0,10"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="TabNavigation" Value="Once"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
                <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False"/>
                <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled"/>
                <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
                <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
                <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
                <Setter Property="IsSwipeEnabled" Value="True"/>
                <Setter Property="UseSystemFocusVisuals" Value="True"/>
                <Setter Property="FocusVisualMargin" Value="-2"/>
                <Setter Property="ItemContainerTransitions">
                    <Setter.Value>
                        <TransitionCollection>
                            <AddDeleteThemeTransition/>
                            <ContentThemeTransition/>
                            <ReorderThemeTransition/>
                            <EntranceThemeTransition IsStaggeringEnabled="True"/>
                        </TransitionCollection>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <ItemsWrapGrid Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridView">
                            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" 
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <ScrollViewer x:Name="ScrollViewer" AutomationProperties.AccessibilityView="Raw" 
                                              BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" 
                                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
                                              HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" 
                                              IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" 
                                              IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" 
                                              IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" 
                                              IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" 
                                              IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" 
                                              TabNavigation="{TemplateBinding TabNavigation}" 
                                              VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" 
                                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" 
                                              ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                    <ItemsPresenter Footer="{TemplateBinding Footer}" FooterTransitions="{TemplateBinding FooterTransitions}" 
                                                    FooterTemplate="{TemplateBinding FooterTemplate}" Header="{TemplateBinding Header}" 
                                                    HeaderTransitions="{TemplateBinding HeaderTransitions}" 
                                                    HeaderTemplate="{TemplateBinding HeaderTemplate}" 
                                                    Padding="{TemplateBinding Padding}"/>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ListViewItem" x:Key="HomeListViewItemStyle">
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}" />
                <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}" />
                <Setter Property="TabNavigation" Value="Local" />
                <Setter Property="IsHoldingEnabled" Value="True" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="4,0" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
                <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
                <Setter Property="AllowDrop" Value="False" />
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="FocusVisualMargin" Value="0" />
                <Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource ListViewItemFocusVisualPrimaryBrush}" />
                <Setter Property="FocusVisualPrimaryThickness" Value="2" />
                <Setter Property="FocusVisualSecondaryBrush" Value="{ThemeResource ListViewItemFocusVisualSecondaryBrush}" />
                <Setter Property="FocusVisualSecondaryThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <ListViewItemPresenter ContentTransitions="{TemplateBinding ContentTransitions}"
                        x:Name="Root" HorizontalAlignment="Stretch"
                        Control.IsTemplateFocusTarget="True"
                        FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                        FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                        FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                        FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                        FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                        SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}"
                        CheckBrush="{ThemeResource ListViewItemCheckBrush}"
                        CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
                        DragBackground="{ThemeResource ListViewItemDragBackground}"
                        DragForeground="{ThemeResource ListViewItemDragForeground}"
                        FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                        FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                        PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
                        PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}"
                        PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                        SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}"
                        SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
                        SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}"
                        PressedBackground="{ThemeResource ListViewItemBackgroundPressed}"
                        SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}"
                        DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                        DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                        ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        ContentMargin="{TemplateBinding Padding}"
                        CheckMode="{ThemeResource ListViewItemCheckMode}" RevealBackgroundShowsAboveContent="True"
                        RevealBackground="{ThemeResource ListViewItemRevealBackground}"
                        RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}"
                        RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Selected" />
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PointerOverSelected">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PointerOverPressed">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PressedSelected">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DisabledStates">
                                        <VisualState x:Name="Enabled" />
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="Root.RevealBorderThickness" Value="0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </ListViewItemPresenter>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="GridViewItem" x:Key="HeroGridViewItemStyle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewItem">
                            <ListViewItemPresenter ContentTransitions="{TemplateBinding ContentTransitions}"
                        x:Name="Root" Margin="16"
                        Control.IsTemplateFocusTarget="True" Background="{x:Null}"
                        FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                        FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                        FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                        FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                        FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                        SelectionCheckMarkVisualEnabled="{ThemeResource GridViewItemSelectionCheckMarkVisualEnabled}"
                        CheckBrush="{ThemeResource GridViewItemCheckBrush}"
                        CheckBoxBrush="{ThemeResource GridViewItemCheckBoxBrush}"
                        DragBackground="{ThemeResource GridViewItemDragBackground}"
                        DragForeground="{ThemeResource GridViewItemDragForeground}"
                        FocusBorderBrush="{ThemeResource GridViewItemFocusBorderBrush}"
                        FocusSecondaryBorderBrush="{ThemeResource GridViewItemFocusSecondaryBorderBrush}"
                        PlaceholderBackground="{x:Null}"
                        PointerOverBackground="{x:Null}"
                        PointerOverForeground="{ThemeResource GridViewItemForegroundPointerOver}"
                        SelectedBackground="{x:Null}"
                        SelectedForeground="{ThemeResource GridViewItemForegroundSelected}"
                        SelectedPointerOverBackground="{ThemeResource GridViewItemBackgroundSelectedPointerOver}"
                        PressedBackground="{x:Null}"
                        SelectedPressedBackground="{ThemeResource GridViewItemBackgroundSelectedPressed}"
                        DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                        DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                        ReorderHintOffset="{ThemeResource GridViewItemReorderHintThemeOffset}"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        ContentMargin="{TemplateBinding Padding}"
                        CheckMode="{ThemeResource GridViewItemCheckMode}"
                        RevealBackgroundShowsAboveContent="True">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Selected" />

                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PointerOverSelected">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PointerOverPressed">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PressedSelected">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="DisabledStates">
                                        <VisualState x:Name="Enabled" />

                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="Root.RevealBorderThickness" Value="0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>
                            </ListViewItemPresenter>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Page.Resources>

    <Grid x:Name="Main" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{ThemeResource HomePageBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="144"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.RowSpan="2" x:Name="LayerGradient" Opacity="0.5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.Background>
                <LinearGradientBrush EndPoint="0,0" StartPoint="1,0">
                    <GradientStop Color="{x:Bind Context.LeftGradient, Mode=OneWay}"/>
                    <GradientStop Color="{x:Bind Context.RightGradient, Mode=OneWay}" Offset="1"/>
                </LinearGradientBrush>
            </Grid.Background>
        </Grid>
        <Grid Grid.RowSpan="2" x:Name="LayerMask" Opacity="1" 
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
              Background="{ThemeResource HomePageGradient}"/>
        <StackPanel Orientation="Vertical" Margin="0,32,0,0">
            <TextBlock OpticalMarginAlignment="None" HorizontalAlignment="Center" VerticalAlignment="Center" 
                       Style="{ThemeResource SubheaderTextBlockStyle}" FontWeight="Bold" 
                       Text="{x:Bind Context.WelcomeTitle, Mode=OneWay}"/>
            <TextBlock Margin="0,12,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" 
                       Style="{ThemeResource SubtitleTextBlockStyle}" Text="Let's Play Something..."/>
        </StackPanel>
        <ScrollViewer IsHorizontalScrollChainingEnabled="False" IsHorizontalRailEnabled="False" Grid.Row="1" 
                      HorizontalScrollMode="Auto" HorizontalScrollBarVisibility="Hidden" 
                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                      VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto" IsVerticalRailEnabled="True" 
                      IsVerticalScrollChainingEnabled="True">
            <StackPanel Margin="0,0,0,32" Orientation="Vertical" x:Name="ContentPanel"
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <GridView SelectionMode="None" IsItemClickEnabled="True" ItemsSource="{x:Bind Context.HeroList}"
                          ItemContainerStyle="{ThemeResource HeroGridViewItemStyle}"
                          HorizontalAlignment="Center" VerticalAlignment="Stretch" Padding="40"
                          Margin="60" Style="{ThemeResource HeroGridViewStyle}" x:Name="HeroGrid">
                    <GridView.ItemTemplate>
                        <DataTemplate x:DataType="vm:GenericMusicItemViewModel">
                            <Grid Background="{x:Null}" PointerEntered="Grid_PointerEntered" PointerExited="Grid_PointerExited" 
                                  PointerPressed="Grid_PointerPressed" PointerReleased="Grid_PointerReleased" 
                                  Height="144" Width="144">
                                <Grid.Resources>
                                    <Storyboard x:Key="PointerOver">
                                        <DoubleAnimation Storyboard.TargetName="Title" Storyboard.TargetProperty="Opacity"
                                                         EnableDependentAnimation="True" To="0" Duration="0:0:0.48">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="Opacity"
                                                         EnableDependentAnimation="True" To="1" Duration="0:0:0.48">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="Shadow" Storyboard.TargetProperty="BlurRadius"
                                                         EnableDependentAnimation="True" To="32" Duration="0:0:0.48">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>

                                    <Storyboard x:Key="Pressed">
                                        <DoubleAnimation Storyboard.TargetName="Shadow" Storyboard.TargetProperty="BlurRadius"
                                                         EnableDependentAnimation="True" To="-4" Duration="0:0:0.48">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                    <Storyboard x:Key="Normal">
                                        <DoubleAnimation Storyboard.TargetName="Title" Storyboard.TargetProperty="Opacity"
                                                         EnableDependentAnimation="True" To="1" Duration="0:0:0.48">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="Opacity"
                                                         EnableDependentAnimation="True" To="0" Duration="0:0:0.48">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="Shadow" Storyboard.TargetProperty="BlurRadius"
                                                         EnableDependentAnimation="True" To="16" Duration="0:0:0.48">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </Grid.Resources>
                                <toolkit:DropShadowPanel x:Name="Shadow"
                                    OffsetX="0" OffsetY="0" BlurRadius="16" ShadowOpacity="0.5" Color="{ThemeResource SystemBaseHighColor}">
                                    <Ellipse Height="144" Width="144">
                                        <Ellipse.Fill>
                                            <ImageBrush ImageSource="/Assets/Images/th.jpg" AlignmentX="Center" AlignmentY="Center" Stretch="UniformToFill"/>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </toolkit:DropShadowPanel>
                                <Ellipse Height="144" Width="144" Fill="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}">
                                </Ellipse>
                                <TextBlock x:Name="Title" Text="{x:Bind Title}" Style="{ThemeResource SubtitleTextBlockStyle}"
                                           Foreground="{ThemeResource SystemControlForegroundAltHighBrush}"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"
                                           Margin="12" MaxLines="2" TextWrapping="WrapWholeWords" 
                                               TextTrimming="CharacterEllipsis"/>
                                <FontIcon x:Name="Icon" FontFamily="Segoe MDL2 Assets" Opacity="0"
                                           Foreground="{ThemeResource SystemControlForegroundAltHighBrush}"
                                          Glyph="&#xE102;" FontSize="32"
                                          HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </DataTemplate>
                    </GridView.ItemTemplate>
                </GridView>
                <TextBlock Margin="16,32,16,8" Text="Your Favorite" 
                       Style="{ThemeResource TitleTextBlockStyle}" FontWeight="Bold"/>
                <ListView Margin="0,8" IsSynchronizedWithCurrentItem="False" IsItemClickEnabled="True" 
                          ScrollViewer.IsHorizontalScrollChainingEnabled="True" ScrollViewer.IsHorizontalRailEnabled="True"
                      SelectionMode="None" ItemsSource="{x:Bind Context.FavList}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                      ItemContainerStyle="{ThemeResource HomeListViewItemStyle}" 
                      Style="{StaticResource HorizontalListView}" x:Name="FavList">
                    <ListView.Header>
                        <Grid VerticalAlignment="Stretch" Width="32"/>
                    </ListView.Header>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="vm:GenericMusicItemViewModel">
                            <StackPanel Width="150" Background="{ThemeResource SystemControlBackgroundAltMediumBrush}" 
                                        Orientation="Vertical">
                                <toolkit:ImageEx HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                                 Source="{x:Bind Artwork}" PlaceholderSource="/Assets/Images/placeholder_b.png" 
                                                 Style="{ThemeResource QuickLoadImageEx}" Width="150" Height="150" 
                                                 Stretch="UniformToFill" PlaceholderStretch="UniformToFill"/>
                                <TextBlock Text="{x:Bind Title}" Style="{ThemeResource BaseTextBlockStyle}" 
                                           MaxLines="1" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" 
                                           Margin="8,4,8,0"/>
                                <TextBlock Text="{x:Bind Description}" Style="{ThemeResource BodyTextBlockStyle}" 
                                           MaxLines="1" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" 
                                           Margin="8,0,8,0"/>
                                <TextBlock Text="{x:Bind Addtional}" Style="{ThemeResource BodyTextBlockStyle}" 
                                           MaxLines="1" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" 
                                           Margin="8,0,8,12"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.Footer>
                        <Grid VerticalAlignment="Stretch" Width="32"/>
                    </ListView.Footer>
                </ListView>
                <TextBlock Margin="16,32,16,8" Text="Feeling Lucky" Style="{ThemeResource TitleTextBlockStyle}" FontWeight="Bold"/>
                <ListView Margin="0,8" IsSynchronizedWithCurrentItem="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                          ScrollViewer.IsHorizontalScrollChainingEnabled="True" 
                          ScrollViewer.IsHorizontalRailEnabled="True"
                          IsItemClickEnabled="True" SelectionMode="None" 
                          ItemsSource="{x:Bind Context.FavList}" 
                          ItemContainerStyle="{ThemeResource HomeListViewItemStyle}" 
                          Style="{StaticResource HorizontalListView}" 
                          x:Name="LuckyList">
                    <ListView.Header>
                        <Grid VerticalAlignment="Stretch" Width="32"/>
                    </ListView.Header>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="vm:GenericMusicItemViewModel">
                            <StackPanel Width="150" 
                                        Background="{ThemeResource SystemControlBackgroundAltMediumBrush}" 
                                        Orientation="Vertical">
                                <toolkit:ImageEx HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                                 Source="{x:Bind Artwork}" PlaceholderSource="/Assets/Images/placeholder_b.png" 
                                                 Style="{ThemeResource QuickLoadImageEx}" Width="150" Height="150" 
                                                 Stretch="UniformToFill" PlaceholderStretch="UniformToFill"/>
                                <TextBlock Text="{x:Bind Title}" Style="{ThemeResource BaseTextBlockStyle}" 
                                           MaxLines="1" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" 
                                           Margin="8,4,8,0"/>
                                <TextBlock Text="{x:Bind Description}" Style="{ThemeResource BodyTextBlockStyle}" 
                                           MaxLines="1" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" 
                                           Margin="8,0,8,0"/>
                                <TextBlock Text="{x:Bind Addtional}" Style="{ThemeResource BodyTextBlockStyle}" 
                                           MaxLines="1" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" 
                                           Margin="8,0,8,12"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.Footer>
                        <Grid VerticalAlignment="Stretch" Width="32"/>
                    </ListView.Footer>
                </ListView>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
